{"version":3,"sources":["components/Content/index.module.css","components/common/Spinner/index.module.css","components/Menu/index.module.scss","components/common/Container/index.module.scss","components/common/PageTitle/index.module.scss","components/Candidate/Opinion.module.scss","redux/user/actions.js","redux/user/saga.js","redux/user/index.js","redux/spinners/index.js","redux/businessConfig/index.js","redux/adminStatistic/index.js","redux/candidates/index.js","redux/opinions/index.js","redux/spinners/actions.js","redux/middlewares/restApiInjector.js","redux/middlewares/spinnerMiddleware.js","redux/Providers.js","redux/configureStore.js","components/Content/index.js","containers/withUser.js","components/common/Container/index.js","components/common/Link.js","components/Main/Top.js","components/common/PersonItem/index.js","components/common/PageTitle/index.js","components/Main/Сandidates.js","components/Main/index.js","containers/withOpinions.js","redux/opinions/actions.js","components/Candidate/Opinion.js","components/Candidate/Opinions.js","components/Candidate/index.js","containers/withCandidates.js","redux/candidates/actions.js","redux/businessConfig/actions.js","components/common/Spinner/index.js","containers/withSpinners.js","components/common/AuthenticatedRoute.js","components/common/NotAuthenticatedRoute.js","components/AdminStatistic/StatisticField.js","components/AdminStatistic/index.js","containers/withAdminStatistic.js","redux/adminStatistic/actions.js","components/Menu/index.js","components/Login/SignUp.js","components/Login/SignIn.js","components/Login/index.js","App.js","containers/withBusinessConfig.js","serviceWorker.js","index.js","components/Main/Top.module.scss","components/Login/index.module.scss","components/common/PersonItem/index.module.scss","components/Candidate/Opinions.module.scss","components/Candidate/index.module.scss","components/Main/Сandidates.module.scss"],"names":["module","exports","contentWrapper","content","overlay","fixed","transparentOverlay","spinnerWrapper","menu","item","container","pageTitle","opinion","like","profession","counter","prosConsBlock","pros","cons","overall","overallTitle","getUserInfo","Object","defineProperty","RSAA","endpoint","concat","process","credentials","method","headers","Content-Type","types","type","meta","spinnerKeys","LOGIN","_callee2","regenerator_default","a","wrap","_context2","prev","next","takeLatest","mark","_callee","_context","put","stop","this","action","notification","error","duration","description","react_default","createElement","redux_Providers","react","react_localize_redux_es","id","payload","status","success","_marked","initialState","userInfo","userInfoRequestDone","userReducer","state","arguments","length","undefined","_ref","objectSpread","reducer","obj","JSON","parse","stringify","_","update","key","active","adminStatistic","candidates","candidateInfo","initState","list","setSpinnerStatus","restApiInjector","callApi","CALL_API","spinnerMiddleware","store","indexOf","dispatch","toReplace","replace","RegExp","keys","map","history","createHistory","rootReducer","combineReducers","router","connectRouter","spinners","user","businessConfig","opinions","rootSaga","fork","userSaga","_ref2","_ref3","sagaMiddleware","createSagaMiddleware","middlewares","apiMiddleware","routerMiddleware","createStore","applyMiddleware","apply","run","configureStore","compose","pure","children","es","lib","ContentAnt","Layout","Content","className","styles","props","Component","defaultProps","withUser","connect","_ref$user","logout","signIn","values","body","signUp","Link","assign","to","search","location","Top","top","common_Container","classNames","slogan","slogan1","slogan2","downLink","common_Link","pathname","icon","Main_Top","withLocalize","PersonItem","imageLink","name","age","personItem","avatar","size","textBlock","PageTitle","Сandidates","common_PageTitle","candidate","index","common_PersonItem","lifecycle","componentDidMount","activePage","match","params","$","animate","scrollTop","offset","componentDidUpdate","_andidates","withOpinions","getOpinions","candidateId","Opinion","userMeta","withRouter","Opinions","title","es_button","btn","Candidate_Opinion","Candidate","Candidate_Opinions","getCandidateInfo","document","documentElement","SpinkitComp","noFadeIn","dist_default","Spinner","showSpinner","Spinner_SpinkitComp","style","visibility","withProps","spinnerKey","show","keyVal","get","isObject","find","o","PrivateRoute","component","rest","objectWithoutProperties","Route","render","Redirect","AuthenticatedRoute","StatisticField","field","label","fields","oo","value","ooo","card","oooo","AdminStatistic","translate","AdminStatistic_StatisticField","getAdminStatistic","branch","renderNothing","MENU_ITEMS","path","Menu","FormItem","Form","Item","SignUp","getFieldDecorator","form","compareToFirstPassword","handleSubmit","showModal","modal","loginModal","visible","footer","common_Spinner","onClick","onOk","onCancel","push","es_form","rules","required","message","input","prefix","placeholder","validator","linksBlock","create","query","URLSearchParams","rule","callback","getFieldValue","withHandlers","validateFields","err","invitedById","SignIn","SignIn_FormItem","invitedBy","Login","Login_SignUp","Login_SignIn","AppComp","layout","components_Menu","components_Login","components_Content","Switch","NotAuthenticatedRoute","exact","Main","App","getBusinessConfig","renderComponent","gameConfig","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","btnWrapper","invitedByBlock","invitedByText"],"mappings":"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","file":"static/js/main.5417743c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"Content_contentWrapper__3YLi4\",\"content\":\"Content_content__25CtX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Spinner_overlay__-63ux\",\"fixed\":\"Spinner_fixed__2SJan\",\"transparentOverlay\":\"Spinner_transparentOverlay__2NOto\",\"spinnerWrapper\":\"Spinner_spinnerWrapper__1B63d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__2XmXp\",\"item\":\"Menu_item__XE6m2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__34UPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitle\":\"PageTitle_pageTitle__1JkBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"opinion\":\"Opinion_opinion__1k6af\",\"like\":\"Opinion_like__1ZuP-\",\"content\":\"Opinion_content__OEddZ\",\"profession\":\"Opinion_profession__Dw0ez\",\"counter\":\"Opinion_counter__DJmrd\",\"prosConsBlock\":\"Opinion_prosConsBlock__2EiGD\",\"pros\":\"Opinion_pros__1pDue\",\"cons\":\"Opinion_cons__3PqCd\",\"overall\":\"Opinion_overall__1tOgz\",\"overallTitle\":\"Opinion_overallTitle__1TSop\"};","import { RSAA } from 'redux-api-middleware';\n\nexport const getUserInfo = () => ({\n  [RSAA]: {\n    endpoint: `${process.env.REACT_APP_BASE_REST_URL}/user`,\n    credentials: 'include',\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    types: [\n      'GET_USER_INFO_REQUEST',\n      { type: 'GET_USER_INFO_SUCCESS', meta: { spinnerKeys: { LOGIN: false } } },\n      { type: 'GET_USER_INFO_FAILURE', meta: { spinnerKeys: { LOGIN: false } } },\n    ]\n  }\n});\n\nexport const signIn = (values) => ({\n  [RSAA]: {\n    endpoint: `${process.env.REACT_APP_BASE_REST_URL}/auth/local`,\n    method: 'POST',\n    credentials: 'include',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(values),\n    types: [\n      { type: 'SIGN_IN_REQUEST', meta: { spinnerKeys: { LOGIN: true } } },\n      'SIGN_IN_SUCCESS',\n      { type: 'SIGN_IN_FAILURE', meta: { spinnerKeys: { LOGIN: false } } },\n    ]\n  }\n});\n\nexport const signUp = (values) => ({\n  [RSAA]: {\n    endpoint: `${process.env.REACT_APP_BASE_REST_URL}/sign-up`,\n    method: 'POST',\n    credentials: 'include',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(values),\n    types: [\n      { type: 'SIGN_UP_REQUEST', meta: { spinnerKeys: { LOGIN: true } } },\n      'SIGN_UP_SUCCESS',\n      { type: 'SIGN_UP_FAILURE', meta: { spinnerKeys: { LOGIN: false } } },\n    ]\n  }\n});\n\nexport const logout = () => ({\n  [RSAA]: {\n    endpoint: `${process.env.REACT_APP_BASE_REST_URL}/logout`,\n    method: 'GET',\n    credentials: 'include',\n    types: [\n      'LOGOUT_REQUEST',\n      'LOGOUT_SUCCESS',\n      'LOGOUT_FAILURE'\n    ]\n  }\n});\n","import { notification } from 'antd';\nimport { getUserInfo } from './actions';\nimport { Fragment } from 'react';\nimport { Translate } from 'react-localize-redux';\nimport Providers from '../Providers';\nimport React from 'react';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nexport default function* () {\n  yield takeLatest(['SIGN_UP_SUCCESS', 'SIGN_IN_SUCCESS'], function *() {\n    yield put(getUserInfo())\n  });\n  yield takeLatest('SIGN_IN_FAILURE', (action) => {\n    notification.error({\n      duration: 5,\n      description: <Providers>\n        <Fragment>\n          <Translate id={ action.payload.status === 401 ? 'EMAIL_OR_PASSWORD_IS_INCORRECT' : 'SERVER_ERROR'} />\n        </Fragment>\n      </Providers>\n    });\n  });\n  yield takeLatest('SIGN_UP_FAILURE', (action) => {\n    notification.error({\n      duration: 5,\n      description: <Providers>\n        <Fragment>\n          <Translate id={ action.payload.status === 400 ? 'THIS_EMAIL_IS_BUSY' : 'SERVER_ERROR'} />\n        </Fragment>\n      </Providers>\n    });\n  });\n  yield takeLatest(['SIGN_UP_SUCCESS', 'SIGN_IN_SUCCESS'], (action) => {\n    notification.success({\n      duration: 5,\n      description:\n        <Providers>\n          <Fragment>\n            <Translate id={action.type} />\n          </Fragment>\n        </Providers>\n    });\n  });\n}\n","const initialState = {\n  userInfo: null,\n  userInfoRequestDone: false,\n};\n\nconst userReducer = (\n  state = initialState,\n  { type, payload },\n) => {\n  switch (type) {\n    case 'GET_USER_INFO_SUCCESS':\n      return { ...state, userInfo: payload, userInfoRequestDone: true };\n    case 'GET_USER_INFO_FAILURE':\n      return { ...state, userInfoRequestDone: true };\n    case 'LOGOUT_REQUEST':\n      return { ...state, userInfo: null };\n    case 'USER_UPDATED':\n      return { ...state, userInfo: payload };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import _ from 'lodash';\n\nconst reducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case 'SET_SPINNER_STATUS': {\n      const obj = JSON.parse(JSON.stringify(state));\n      return _.update(obj, payload.key, () => payload.active);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const reducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case 'GET_BUSINESS_CONFIG_SUCCESS':\n      return { ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const initialState = {\n  adminStatistic: null,\n};\n\nconst reducer = (\n  state = initialState,\n  { type, payload },\n) => {\n  switch (type) {\n    case 'GET_ADMIN_STATISTIC_REQUEST':\n      return { ...initialState };\n    case 'GET_ADMIN_STATISTIC_SUCCESS':\n      return { ...state, adminStatistic: payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const initialState = {\n  candidates: [],\n  candidateInfo: null,\n};\n\n\nconst reducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'GET_CANDIDATES_SUCCESS':\n      return { ...state, candidates: payload };\n    case 'GET_CANDIDATE_INFO_SUCCESS':\n      return { ...state, candidateInfo: payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const initState = { list: [] };\nconst reducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case 'GET_OPINIONS_SUCCESS':\n      return { list: payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const setSpinnerStatus = ({ key, active }) => ({\n  type: 'SET_SPINNER_STATUS',\n  payload: { key, active },\n});\n","import { CALL_API } from 'redux-api-middleware';\n\nexport default () => next => action => {\n  const callApi = action[CALL_API];\n\n  if (callApi) {\n    callApi.credentials = 'include';\n    callApi.headers = {\n      'Content-Type': 'application/json',\n      ...callApi.headers,\n    };\n  }\n  return next(action)\n}\n","import { setSpinnerStatus } from '../spinners/actions';\n\nexport default (store) => (next) => (action) => {\n  const { type, meta } = action;\n\n  if (type.indexOf('REQUEST') !== -1) {\n    store.dispatch(setSpinnerStatus({ key: `REST_API.${type}`, active: true }));\n  }\n  if (type.indexOf('SUCCESS') !== -1 || type.indexOf('FAILURE') !== -1) {\n    const toReplace = type.indexOf('SUCCESS') !== -1 ? 'SUCCESS' : 'FAILURE';\n    store.dispatch(setSpinnerStatus({\n      key: `REST_API.${type.replace(new RegExp(toReplace, 'gi'), 'REQUEST')}`,\n      active: false\n    }));\n  }\n\n  if (!meta || !meta.spinnerKeys) return next(action);\n\n  const spinnerKeys = meta.spinnerKeys;\n  Object.keys(spinnerKeys).map((key) => {\n    store.dispatch(setSpinnerStatus({ key, active: spinnerKeys[key] }))\n  });\n\n\n  return next(action);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { compose, pure } from 'recompose';\nimport createHistory from 'history/createBrowserHistory';\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport configureStore from './configureStore';\n\nexport const history = createHistory();\nexport const store = configureStore({ history });\n\nconst Providers = ({ children }) => {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        {children}\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nProviders.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default compose(pure)(Providers);\n","import { createStore, applyMiddleware } from 'redux';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport createSagaMiddleware from 'redux-saga'\nimport { routerMiddleware, connectRouter } from 'connected-react-router'\nimport logger from 'redux-logger'\nimport { fork, takeLatest } from 'redux-saga/effects';\nimport { combineReducers } from 'redux';\n\nimport userSaga from './user/saga';\nimport user from './user';\nimport spinners from './spinners';\nimport businessConfig from './businessConfig';\nimport adminStatistic from './adminStatistic';\nimport candidates from './candidates';\nimport opinions from './opinions';\nimport { setSpinnerStatus } from './spinners/actions';\nimport restApiInjector from './middlewares/restApiInjector';\nimport spinnerMiddleware from './middlewares/spinnerMiddleware';\n\nexport default ({ history }) => {\n  const rootReducer = combineReducers({\n    router: connectRouter(history),\n    spinners,\n    user,\n    businessConfig,\n    candidates,\n    opinions,\n    adminStatistic,\n  });\n\n  const rootSaga = function* () {\n    yield fork(userSaga);\n    yield fork(function* () {\n      yield takeLatest(\n        ({ type }) => {\n          return type.indexOf('REQUEST') !== -1;\n        }, ({ type }) => {\n          setSpinnerStatus({ key: `REST_API.${type}`, active: true })\n        }\n      );\n    });\n  };\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const middlewares = [\n    restApiInjector,\n    apiMiddleware,\n    sagaMiddleware,\n    routerMiddleware(history),\n    spinnerMiddleware,\n  ];\n\n  if (process.env.NODE_ENV === 'development') middlewares.push(logger);\n\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(...middlewares),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout } from 'antd';\nimport { compose, pure } from 'recompose';\nimport styles from './index.module.css';\n\nconst { Content: ContentAnt } = Layout;\n\nclass Content extends Component {\n  render() {\n    return (\n      <ContentAnt className={styles.contentWrapper}>\n        <div className={styles.content}>\n          {this.props.children}\n        </div>\n      </ContentAnt>\n    )\n  }\n}\n\nexport default compose(pure)(Content);\n\nContent.defaultProps = {\n  className: '',\n};\n\nContent.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","import { connect } from 'react-redux';\nimport {\n  getUserInfo,\n  logout,\n  signIn,\n  signUp,\n} from '../redux/user/actions';\n\nexport default () => connect(\n  ({\n    user: {\n      userInfo,\n      userInfoRequestDone,\n    }\n  }) => ({\n    userInfo,\n    userInfoRequestDone,\n  }),\n  (dispatch) => {\n    return {\n      getUserInfo() {\n        return dispatch(getUserInfo());\n      },\n      logout() {\n        return dispatch(logout());\n      },\n      signIn(values) {\n        return dispatch(signIn(values));\n      },\n      signUp(values) {\n        return dispatch(signUp(values));\n      },\n    };\n  }\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { pure, compose } from 'recompose';\nimport styles from './index.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>\n};\n\nexport default compose(pure)(Container);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport { pure, compose } from 'recompose';\nimport { Link } from 'react-router-dom';\n\nconst LinkComp = (props) => {\n  return <Link {...props} to={{ ...props.to, search: props.to.search || location.search }}>{props.children}</Link>;\n};\n\nexport default compose(\n  pure,\n)(LinkComp);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withLocalize } from 'react-localize-redux';\nimport withUser from '../../containers/withUser';\nimport Container from '../common/Container';\nimport { compose, pure } from 'recompose';\nimport classNames from 'classnames';\nimport { Icon } from 'antd';\nimport styles from './Top.module.scss';\nimport Link from '../common/Link';\n\nconst Top = () => {\n  return (\n    <div className={styles.top}>\n      <Container>\n        <div className={classNames(styles.slogan, styles.slogan1)}>\n          <span>Вибори<br/>президента 2019</span>\n        </div>\n        <div className={classNames(styles.slogan, styles.slogan2)}>\n          <span>Обгрунтуй свою позицію</span>\n        </div>\n        <div className={styles.downLink}>\n          <Link to={{ pathname: '/candidates' }}>\n            <Icon type=\"down-circle\" />\n          </Link>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default compose(\n  withLocalize,\n  withUser(),\n  pure,\n)(Top);\n\nTop.defaultProps = {\n  userInfo: null,\n};\nTop.propTypes = {\n  translate: PropTypes.func.isRequired,\n  userInfo: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure } from 'recompose';\nimport { Avatar } from 'antd';\nimport styles from './index.module.scss';\n\nconst PersonItem = ({ imageLink, name, age, description }) => (\n  <div className={styles.personItem}>\n    <Avatar size={200} icon={imageLink} />\n    <div className={styles.textBlock}>\n      <h3 className={styles.name}>{name}</h3>\n      <p className={styles.age}>Вік: {age}</p>\n      <p className={styles.description}>{description}</p>\n    </div>\n  </div>\n);\n\nexport default compose(\n  pure,\n)(PersonItem);\n\nPersonItem.defaultProps = {\n  className: '',\n};\nPersonItem.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  imageLink: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure } from 'recompose';\nimport styles from './index.module.scss';\n\nconst PageTitle = ({\n  children,\n  className,\n}) => (\n  <h1 className={`${styles.pageTitle} ${className}`}>{children}</h1>\n);\n\nexport default compose(\n  pure,\n)(PageTitle);\n\nPageTitle.defaultProps = {\n  className: '',\n};\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withUser from '../../containers/withUser';\nimport Container from '../common/Container';\nimport PersonItem from '../common/PersonItem';\nimport PageTitle from '../common/PageTitle';\nimport Link from '../common/Link';\nimport { compose, pure } from 'recompose';\nimport styles from './Сandidates.module.scss';\n\nconst Сandidates = () => {\n  return (\n    <div className={styles.candidates} id=\"candidates\">\n      <Container>\n        <PageTitle>Кандидати</PageTitle>\n        <div className={styles.list}>\n          {\n            [1, 1, 1, 1, 1].map((candidate, index) => (\n              <Link\n                key={index}\n                className={styles.item}\n                to={{ pathname: `/candidates/${candidate.id}/` }}\n              >\n                <PersonItem\n                  name=\"Петр Порошенко\"\n                  imageLink=\"http://google.com\"\n                  age={77}\n                  description=\"Олигарх, бизнесмен, политик\"\n                />\n              </Link>\n            ))\n          }\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default compose(\n  withUser(),\n  pure,\n)(Сandidates);\n\nСandidates.defaultProps = {\n  userInfo: null,\n};\nСandidates.propTypes = {\n  userInfo: PropTypes.object,\n};\n","import React from 'react';\nimport { compose, pure, lifecycle } from 'recompose';\nimport $ from 'jquery';\nimport Top from './Top';\nimport Сandidates from './Сandidates';\n\nconst Main = () => {\n  return (\n    <div>\n      <Top />\n      <Сandidates />\n    </div>\n  );\n}\n\nexport default compose(\n  lifecycle({\n    componentDidMount() {\n      const { match: { params: { activePage } } } = this.props;\n      if (activePage) {\n        $('html, body').animate({\n          scrollTop: $(`#${activePage}`).offset().top - 50,\n        }, 1000);\n      }\n    },\n    componentDidUpdate() {\n      const { match: { params: { activePage } } } = this.props;\n      if (activePage) {\n        $('html, body').animate({\n          scrollTop: $(`#${activePage}`).offset().top - 50,\n        }, 1000);\n      }\n    }\n  }),\n  pure,\n)(Main);\n","import { connect } from 'react-redux';\nimport {\n  getOpinions,\n} from '../redux/opinions/actions';\n\nexport default () => connect(\n  ({ opinions: { list } }) => {\n    return {\n      opinions: list,\n    };\n  }, (dispatch) => ({\n    getOpinions({ candidateId }) {\n      return dispatch(getOpinions({ candidateId }));\n    }\n  }),\n);\n","import { RSAA } from 'redux-api-middleware';\n\nexport const getOpinions = () => {\n  return {\n    [RSAA]: {\n      endpoint: `${process.env.REACT_APP_BASE_REST_URL}/opinions`,\n      credentials: 'include',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      types: [\n        'GET_OPINIONS_REQUEST',\n        'GET_OPINIONS_SUCCESS',\n        'GET_OPINIONS_FAILURE'\n      ]\n    }\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure } from 'recompose';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router';\nimport withUser from '../../containers/withUser';\nimport Container from '../common/Container';\nimport styles from './Opinion.module.scss';\n\nconst Opinion = () => {\n  return (\n    <div className={styles.opinion}>\n      <Container>\n        <div className={styles.content}>\n          <div className={styles.profession}>Программист</div>\n          <div className={styles.like}>\n            <i className={classNames('fa-thumbs-up', 'far')} /> <small className={styles.counter}>3423</small>\n          </div>\n          <div className={styles.userMeta}>27 років, вища освіта, м. Киев</div>\n          <div className={classNames(styles.prosConsBlock, styles.pros)}>\n            <div className={styles.item}>+ Плюс кандидата номер, одни кандидата номер, одни</div>\n            <div className={styles.item}>+ Плюс кандидата номер, одни кандидата номер, одни, кандидата номер, одни</div>\n            <div className={styles.item}>+ Плюс кандидата номер, одни кандидата номер</div>\n          </div>\n          <div className={classNames(styles.prosConsBlock, styles.cons)}>\n            <div className={styles.item}>- Плюс кандидата номер, одни кандидата номер, одни</div>\n            <div className={styles.item}>- Плюс кандидата номер, одни кандидата номер, одни, кандидата номер, одни</div>\n          </div>\n          <div className={styles.overall}>\n            <div className={styles.overallTitle}>Загальна думка:</div>\n            Общее впечатление о кандидате общее, впечатление о кандидате. Общее впечатление о кандидате общее, впечатление о кандидате. Общее впечатление о кандидате общее, впечатление о кандидате\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default compose(\n  withRouter,\n  withUser(),\n  pure,\n)(Opinion);\n\nOpinion.defaultProps = {\n  userInfo: null,\n};\nOpinion.propTypes = {\n  userInfo: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { lifecycle, compose, pure } from 'recompose';\nimport classNames from 'classnames';\nimport { Button } from 'antd';\nimport { withRouter } from 'react-router';\nimport withUser from '../../containers/withUser';\nimport withOpinions from '../../containers/withOpinions';\nimport Link from '../../components/common/Link';\nimport styles from './Opinions.module.scss';\nimport Opinion from './Opinion';\n\nconst Opinions = ({ userInfo }) => {\n  return (\n    <div className={styles.opinions}>\n      <h2 className={styles.title}>Думки людей:</h2>\n      <Link to={{ pathname: './', search: userInfo ? '?showModal=add-opinion' : '?showModal=sign-up' }}>\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          className={classNames('ghostBtn', styles.btn)}\n        >\n          Додати свою\n        </Button>\n      </Link>\n      <div className={styles.list}>\n        {\n          [1, 1, 1, 1].map((opinion, index) => (\n            <Opinion key={index} />\n          ))\n        }\n      </div>\n      <Button\n        size=\"large\"\n        type=\"primary\"\n        className={classNames('ghostBtn', styles.btn)}\n      >\n        Додати свою\n      </Button>\n    </div>\n  );\n};\n\nexport default compose(\n  withRouter,\n  withUser(),\n  withOpinions(),\n  lifecycle({\n    componentDidMount() {\n      this.props.getOpinions({ candidateId: this.props.match.params.candidateId });\n    },\n  }),\n  pure,\n)(Opinions);\n\nOpinions.defaultProps = {\n  userInfo: null,\n};\nOpinions.propTypes = {\n  userInfo: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure, lifecycle } from 'recompose';\nimport { Avatar } from 'antd';\nimport withUser from '../../containers/withUser';\nimport withCandidates from '../../containers/withCandidates';\nimport withOpinions from '../../containers/withOpinions';\nimport PageTitle from '../common/PageTitle';\nimport Container from '../common/Container';\nimport styles from './index.module.scss';\nimport Opinions from './Opinions';\n\nconst Candidate = () => {\n  return (\n    <div className={styles.candidate}>\n      <Container>\n        <PageTitle>Вася Васин</PageTitle>\n        <div className={styles.candidateInfo}>\n          <Avatar size={200} />\n          <div className={styles.age}>Вік: 77</div>\n          <div className={styles.description}>Олигарх, бизнесмен, политик</div>\n        </div>\n      </Container>\n      <Opinions />\n    </div>\n  );\n};\n\nexport default compose(\n  withUser(),\n  withCandidates(),\n  withOpinions(),\n  lifecycle({\n    componentDidMount() {\n      document.body.scrollTop = document.documentElement.scrollTop = 0;\n    }\n  }),\n  pure,\n)(Candidate);\n\nCandidate.defaultProps = {\n  userInfo: null,\n};\nCandidate.propTypes = {\n  userInfo: PropTypes.object,\n};\n","import { connect } from 'react-redux';\nimport {\n  getCandidateInfo,\n} from '../redux/candidates/actions';\n\nexport default () => connect(\n  ({ candidate }) => {\n    return {\n      candidate,\n    };\n  }, (dispatch) => ({\n    getCandidateInfo({ id }) {\n      return dispatch(getCandidateInfo({ id }));\n    }\n  }),\n);\n","import { RSAA } from 'redux-api-middleware';\n\nexport const getCandidates = () => {\n  return {\n    [RSAA]: {\n      endpoint: `${process.env.REACT_APP_BASE_REST_URL}/candidates`,\n      credentials: 'include',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      types: [\n        'GET_CANDIDATES_REQUEST',\n        'GET_CANDIDATES_SUCCESS',\n        'GET_CANDIDATES_FAILURE'\n      ]\n    }\n  };\n};\nexport const getCandidateInfo = ({ id }) => {\n  return {\n    [RSAA]: {\n      endpoint: `${process.env.REACT_APP_BASE_REST_URL}/candidates/${id}`,\n      credentials: 'include',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      types: [\n        'GET_CANDIDATE_INFO_REQUEST',\n        'GET_CANDIDATE_INFO_SUCCESS',\n        'GET_CANDIDATE_INFO_FAILURE'\n      ]\n    }\n  };\n};\n","import { RSAA } from 'redux-api-middleware';\n\nexport const getBusinessConfig = () => {\n  return {\n    [RSAA]: {\n      endpoint: `${process.env.REACT_APP_BASE_REST_URL}/business-config`,\n      credentials: 'include',\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      types: [\n        'GET_BUSINESS_CONFIG_REQUEST',\n        'GET_BUSINESS_CONFIG_SUCCESS',\n        'GET_BUSINESS_CONFIG_FAILURE'\n      ]\n    }\n  };\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport {\n  compose,\n  withProps,\n  pure,\n} from 'recompose';\nimport Spinkit from 'react-spinkit';\nimport withSpinners from '../../../containers/withSpinners';\nimport styles from './index.module.css';\n\nconst SpinkitComp = ({ noFadeIn }) => <Spinkit name=\"ball-scale-ripple-multiple\" noFadeIn={noFadeIn} />;\n\nSpinkitComp.propTypes = {\n  noFadeIn: PropTypes.bool.isRequired,\n};\n\nconst Spinner = ({ overlay, noFadeIn, children, showSpinner, fixed, transparentOverlay }) => {\n  return (<Fragment>\n    {\n      showSpinner && <Fragment>\n        {\n          overlay ?\n            (<div className={classNames(styles.overlay, { fixed, transparentOverlay })}>\n              <SpinkitComp noFadeIn={noFadeIn} />\n            </div>) :\n            <div className={styles.spinnerWrapper}><SpinkitComp noFadeIn={noFadeIn}/></div>\n        }\n      </Fragment>\n    }\n    <div style={{ visibility: showSpinner ? 'hidden' : 'visible' }}>{children}</div>\n  </Fragment>)\n};\n\n\nexport default compose(\n  withSpinners(),\n  withProps(\n    ({ spinners, spinnerKey, show }) => {\n      let showSpinner;\n      if (show !== null && show !== undefined) return { showSpinner: show };\n\n      if (!spinnerKey) return { showSpinner: true };\n\n      const keyVal = _.get(spinners, spinnerKey);\n\n      if (!_.isObject(keyVal)) return { showSpinner: keyVal };\n\n      showSpinner = !!Object.values(keyVal).find((o) => o === true);\n\n      return { showSpinner };\n    },\n  ),\n  pure,\n)(Spinner);\n\nSpinner.defaultProps = {\n  overlay: false,\n  spinnerKey: null,\n  children: null,\n  show: null,\n  noFadeIn: false,\n  showSpinner: false,\n  fixed: false,\n  transparentOverlay: false,\n};\n\nSpinner.propTypes = {\n  overlay: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  noFadeIn: PropTypes.bool,\n  spinners: PropTypes.object.isRequired,\n  spinnerKey: PropTypes.string,\n  children: PropTypes.node,\n  show: PropTypes.bool,\n  fixed: PropTypes.bool,\n  transparentOverlay: PropTypes.bool,\n};\n","import { connect } from 'react-redux';\nimport {\n  setSpinnerStatus,\n} from '../redux/spinners/actions';\n\nexport default () => connect(\n  ({ spinners }) => {\n    return {\n      spinners,\n    };\n  }, (dispatch) => ({\n    setSpinnerStatus({ key, active }) {\n      return dispatch(setSpinnerStatus({ key, active }));\n    }\n  }),\n);\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, withRouter } from 'react-router';\nimport withUser from '../../containers/withUser';\nimport { pure, compose } from 'recompose';\n\nconst PrivateRoute = ({ component: Component, userInfo, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        userInfo ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/', search: props.search || location.search }} />\n        )\n      }\n    />\n  )\n}\n\nPrivateRoute.defaultProps = {\n  userInfo: null,\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  userInfo: PropTypes.object,\n}\n\nexport default compose(withRouter, withUser(), pure)(PrivateRoute);\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router'\nimport withUser from '../../containers/withUser';\nimport { compose, pure } from 'recompose';\n\nconst PrivateRoute = ({ component: Component, userInfo, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !userInfo ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/cabinet/', search: props.search || location.search }} />\n        )\n      }\n    />\n  )\n}\n\nPrivateRoute.defaultProps = {\n  userInfo: null,\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  userInfo: PropTypes.object,\n}\n\nexport default compose(withUser(), pure)(PrivateRoute);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport { compose, pure } from 'recompose';\n\nconst StatisticField = ({ field: o }) => {\n  return (\n    <Fragment>\n      <h2>{o.label}</h2>\n      {\n        o.fields && o.fields.map(oo => (<div key={`field-${o.label}-${oo.label}`}>\n          <p>{oo.label}: {oo.value}</p>\n          {\n            oo.fields && oo.fields.map(ooo => (<div key={`field-${oo.label}-${ooo.label}`}>\n              <Card title={`${ooo.label}`}>\n                {\n                  ooo.fields && ooo.fields.map(oooo => (<div key={`field-${oo.label}-${ooo.label}-${oooo.label}`}>\n                    <p>\n                      {oooo.label}: {oooo.value}\n                    </p>\n                  </div>))\n                }\n              </Card>\n            </div>))\n          }\n        </div>))\n      }\n    </Fragment>\n  )\n};\n\nexport default compose(\n  pure,\n)(StatisticField);\n\nStatisticField.defaultProps = {\n};\n\nStatisticField.propTypes = {\n  field: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure, lifecycle, branch, renderNothing } from 'recompose';\nimport { withLocalize } from 'react-localize-redux';\nimport Container from '../common/Container';\nimport PageTitle from '../common/PageTitle';\nimport withAdminStatistic from '../../containers/withAdminStatistic';\nimport StatisticField from './StatisticField';\n\nconst AdminStatistic = ({ translate, adminStatistic }) => {\n  return (\n    <Container>\n      <PageTitle>{translate('ADMIN_STATISTIC')}</PageTitle>\n      <div>\n        <h2>WITHDRAWS</h2>\n        {\n          adminStatistic.fields.map(o => (<StatisticField key={`field-${o.label}`} field={o} />))\n        }\n      </div>\n    </Container>\n  )\n};\n\nexport default compose(\n  withAdminStatistic(),\n  withLocalize,\n  lifecycle({\n    componentDidMount() {\n      this.props.getAdminStatistic()\n    }\n  }),\n  branch(\n    ({ adminStatistic }) => adminStatistic === null,\n    renderNothing,\n  ),\n  pure,\n)(AdminStatistic);\n\nAdminStatistic.defaultProps = {\n  adminStatistic: null,\n};\n\nAdminStatistic.propTypes = {\n  classes: PropTypes.object.isRequired,\n  translate: PropTypes.func.isRequired,\n  adminStatistic: PropTypes.object,\n};\n","import { connect } from 'react-redux';\nimport { getAdminStatistic } from '../redux/adminStatistic/actions';\n\nexport default () => connect(\n  ({\n    adminStatistic: { adminStatistic },\n  }) => ({\n    adminStatistic,\n  }),\n  (dispatch) => {\n    return {\n      getAdminStatistic() {\n        return dispatch(getAdminStatistic());\n      },\n    };\n  }\n);\n","import { RSAA } from 'redux-api-middleware';\n\nexport const getAdminStatistic = () => ({\n  [RSAA]: {\n    endpoint: `${process.env.REACT_APP_BASE_REST_URL}/admin-statistic`,\n    credentials: 'include',\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n    types: [\n      'GET_ADMIN_STATISTIC_REQUEST',\n      'GET_ADMIN_STATISTIC_SUCCESS',\n      'GET_ADMIN_STATISTIC_FAILURE'\n    ]\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, pure } from 'recompose';\nimport styles from './index.module.scss';\nimport Link from '../common/Link';\n\nconst MENU_ITEMS = [\n  {\n    label: 'Головна',\n    path: '/',\n  },\n  {\n    label: 'Кандидати',\n    path: '/candidates/',\n  },\n  {\n    label: 'Реестрація',\n    path: './',\n    search: '?showModal=sign-up'\n  },\n\n]\n\nconst Menu = () => (\n  <div className={styles.menu}>\n    {\n      MENU_ITEMS.map((item, index) => (\n        <div key={index} className={styles.item}><Link to={{ pathname: item.path, search: item.search }}>{item.label}</Link></div>\n      ))\n    }\n\n  </div>\n);\n\nexport default compose(\n  pure,\n)(Menu);\n\nMenu.defaultProps = {\n  className: '',\n};\nMenu.propTypes = {\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Icon, Button, Modal } from 'antd';\nimport { compose, pure, withProps, withHandlers } from 'recompose';\nimport { withRouter } from 'react-router-dom';\nimport withUser from '../../containers/withUser';\nimport Spinner from '../common/Spinner';\nimport Link from '../common/Link';\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst SignUp = ({\n  form: { getFieldDecorator },\n  compareToFirstPassword,\n  handleSubmit,\n  showModal,\n  history,\n}) => {\n  return (\n    <Modal\n      className={styles.loginModal}\n      title={'Реестрація'}\n      visible={showModal === 'sign-up'}\n      footer={\n        <Spinner spinnerKey=\"LOGIN\">\n          <Button type=\"primary\" onClick={handleSubmit}>\n            Відправити\n          </Button>\n        </Spinner>\n      }\n      onOk={() => {}}\n      onCancel={() => {history.push(`./?`)}}\n    >\n      <Form>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [\n              { required: true, message: 'Будь ласка, введіть email' },\n              { type: 'email', message: 'Невалідний email' },\n            ],\n          })(\n            <Input prefix={<Icon type='mail' />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Будь ласка, введіть пароль' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"Пароль\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('repeatPassword', {\n            rules: [\n              {\n                required: true, message: 'Будь ласка повторіть пароль'\n              },\n              {\n                validator: compareToFirstPassword,\n              }\n            ],\n          })(\n            <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"Повторіть пароль\" />\n          )}\n        </FormItem>\n        <div className={styles.linksBlock}>\n          <Link to={{ pathname: './', search: '?showModal=sign-in' }}>Войти</Link> через існуючого користувача\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default compose(\n  Form.create(),\n  withRouter,\n  withUser(),\n  withProps(() => ({ query: new URLSearchParams(location.search) })),\n  withProps(({ form, query }) => {\n    return ({\n      showModal: query.get('showModal'),\n      compareToFirstPassword: (rule, value, callback) => {\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Паролі не співпадають');\n        } else {\n          callback();\n        }\n      },\n    });\n  }),\n  withHandlers({\n    handleSubmit: ({ query, signUp, form: { validateFields } }) => () => {\n      validateFields((err, values) => {\n        if (!err) {\n          signUp({ ...values, invitedById: query.get('invitedById') || null });\n        }\n      });\n    }\n  }),\n  pure,\n)(SignUp);\n\nSignUp.defaultProps = {\n  showModal: null,\n};\n\nSignUp.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  signUp: PropTypes.func.isRequired,\n  compareToFirstPassword: PropTypes.func.isRequired,\n  form: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  showModal: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Icon, Button, Modal } from 'antd';\nimport { compose, pure, withProps, withHandlers } from 'recompose';\nimport { withRouter } from 'react-router';\nimport withUser from '../../containers/withUser';\nimport Spinner from '../common/Spinner';\nimport Link from '../common/Link';\nimport styles from './index.module.scss';\n\nconst FormItem = Form.Item;\n\nconst SignIn = ({\n  form: { getFieldDecorator },\n  handleSubmit,\n  showModal,\n  history,\n}) => {\n  return (\n    <Modal\n      className={styles.loginModal}\n      title=\"Введіть дані вашого користувача\"\n      visible={showModal === 'sign-in'}\n      footer={\n        <Spinner spinnerKey=\"LOGIN\">\n          <Button type=\"primary\" onClick={handleSubmit}>\n            Відправити\n          </Button>\n        </Spinner>\n      }\n      onOk={() => {}}\n      onCancel={() => {history.push(`./?`)}}\n    >\n      <Form>\n        <FormItem>\n          {getFieldDecorator('email', {\n            rules: [\n              { required: true, message: 'Будь ласка, введіть email' },\n              { type: 'email', message: 'Невалідний email' },\n            ],\n          })(\n            <Input prefix={<Icon type=\"mail\" />} placeholder=\"Email\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Будь ласка, введіть пароль' }],\n          })(\n            <Input prefix={<Icon type=\"lock\" />} type=\"password\" placeholder=\"Пароль\" />\n          )}\n        </FormItem>\n        <div className={styles.linksBlock}>\n          <Link to={{ pathname: './', search: '?showModal=sign-up' }}>Зарееструвати</Link> нового користувача\n        </div>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default compose(\n  Form.create(),\n  withRouter,\n  withUser(),\n  withProps(() => ({ query: new URLSearchParams(location.search) })),\n  withProps(({ query }) => {\n    return ({\n      showModal: query.get('showModal'),\n    });\n  }),\n  withHandlers({\n    handleSubmit: ({ signIn, form: { validateFields } }) => () => {\n      validateFields((err, values) => {\n        if (!err) {\n          signIn(values);\n        }\n      });\n    }\n  }),\n  pure,\n)(SignIn);\n\nSignIn.defaultProps = {\n  invitedBy: null,\n  showModal: null,\n};\n\nSignIn.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  form: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  showModal: PropTypes.string,\n};\n","import React, { Fragment } from 'react';\nimport { compose, pure } from 'recompose';\nimport { withRouter } from 'react-router';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\n\nconst Login = () => {\n  return (\n    <Fragment>\n      <SignUp />\n      <SignIn />\n    </Fragment>\n  );\n};\n\nexport default compose(\n  withRouter,\n  pure,\n)(Login);\n\nLogin.defaultProps = {\n};\n\nLogin.propTypes = {\n};\n","import React from 'react';\nimport { Layout } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Switch, withRouter } from 'react-router';\nimport { branch, compose, lifecycle, pure, renderComponent } from 'recompose';\n\nimport Providers, { history } from './redux/Providers';\n\nimport Content from './components/Content';\nimport Main from './components/Main';\nimport Candidate from './components/Candidate';\nimport withUser from './containers/withUser';\nimport withBusinessConfig from './containers/withBusinessConfig';\nimport Spinner from './components/common/Spinner';\nimport AuthenticatedRoute from './components/common/AuthenticatedRoute';\nimport NotAuthenticatedRoute from './components/common/NotAuthenticatedRoute';\nimport AdminStatistic from './components/AdminStatistic';\nimport Menu from './components/Menu';\nimport Login from './components/Login';\n\nconst AppComp = () => {\n  return (\n    <Layout className=\"layout\">\n      <Menu />\n      <Login />\n      <Content>\n        <Switch>\n          <NotAuthenticatedRoute exact path=\"/:activePage(candidates|about)?/\" component={Main} />\n          <AuthenticatedRoute path=\"/admin-statistic/\" component={AdminStatistic} />\n          <NotAuthenticatedRoute exact path=\"/candidates/:candidateId([0-9]*)/\" component={Candidate} />\n        </Switch>\n      </Content>\n    </Layout>\n  );\n};\n\nconst App = compose(\n  withRouter,\n  withUser(),\n  withBusinessConfig(),\n  lifecycle({\n    componentDidMount() {\n      this.props.getUserInfo();\n      this.props.getBusinessConfig();\n    }\n  }),\n  branch(\n    ({ userInfoRequestDone, businessConfig }) => !userInfoRequestDone || !businessConfig,\n    renderComponent(() => <Spinner overlay={true} transparentOverlay={true} />),\n  ),\n  pure,\n)(AppComp);\n\nAppComp.defaultProps = {\n  gameConfig: null,\n};\n\nAppComp.propTypes = {\n  userInfo: PropTypes.object,\n};\n\nexport default () => {\n  return (\n    <Providers>\n      <App history={history} />\n    </Providers>\n  );\n};\n","import { connect } from 'react-redux';\nimport {\n  getBusinessConfig,\n} from '../redux/businessConfig/actions';\n\nexport default () => connect(\n  ({ businessConfig }) => {\n    return {\n      businessConfig,\n    };\n  }, (dispatch) => ({\n    getBusinessConfig() {\n      return dispatch(getBusinessConfig());\n    }\n  }),\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'flag-icon-css/css/flag-icon.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Top_top__1kj6L\",\"downLink\":\"Top_downLink__3Ix3H\",\"slogan1\":\"Top_slogan1__1wjjT\",\"slogan2\":\"Top_slogan2__1-w70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginModal\":\"Login_loginModal__19TW9\",\"btnWrapper\":\"Login_btnWrapper__1kkTo\",\"invitedByBlock\":\"Login_invitedByBlock__1fpsP\",\"invitedByText\":\"Login_invitedByText__3Xl-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"personItem\":\"PersonItem_personItem__91s_k\",\"textBlock\":\"PersonItem_textBlock__2QJ19\",\"name\":\"PersonItem_name__E7Jaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"opinions\":\"Opinions_opinions__wI-h5\",\"list\":\"Opinions_list__3pgs2\",\"title\":\"Opinions_title__3F_1H\",\"btn\":\"Opinions_btn__Z9yKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"candidate\":\"Candidate_candidate__3QSTh\",\"candidateInfo\":\"Candidate_candidateInfo__1wH4i\",\"age\":\"Candidate_age__F2Qwk\",\"description\":\"Candidate_description__3tC_S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"candidates\":\"Сandidates_candidates__1GuJL\",\"list\":\"Сandidates_list__1ky6i\",\"item\":\"Сandidates_item__kWEN8\"};"],"sourceRoot":""}